import{_ as a,c as p,a2 as e,o as n}from"./chunks/framework.Cecu4ZhT.js";const g=JSON.parse('{"title":"系统部署","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"搭建教程.md","filePath":"搭建教程.md"}'),t={name:"搭建教程.md"};function i(l,s,o,c,d,m){return n(),p("div",null,s[0]||(s[0]=[e(`<h1 id="系统部署" tabindex="-1">系统部署 <a class="header-anchor" href="#系统部署" aria-label="Permalink to &quot;系统部署&quot;">​</a></h1><h2 id="材料准备" tabindex="-1">材料准备 <a class="header-anchor" href="#材料准备" aria-label="Permalink to &quot;材料准备&quot;">​</a></h2><ol><li><p>使用公司资质申请苹果开发者账号</p><p><a href="https://support.tuya.com/zh/help/_detail/Kam3pskapsytn" target="_blank" rel="noreferrer">https://support.tuya.com/zh/help/_detail/Kam3pskapsytn</a></p><p>注意事项：</p><ol><li>填写公司官网的时候 公司官网必须可以访问 且官网包含公司的 地址 联系方式 等信息 否则会被决拒绝</li></ol><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823122910636.png" alt="image-20240823122910636"></p><ol start="2"><li>申请苹果开发者的appleid 最好使用已经注册并使用一段时间的appleid 否则会风控,申请苹果开发者的手机和网络一定不要是已经申请过开发者的，否则也会风控</li></ol></li><li><p>使用公司资质申请苹果商务管理，苹果商务管理申请需要一个企业邮箱</p><p><a href="https://support.apple.com/zh-cn/guide/apple-business-manager/axm402206497/web" target="_blank" rel="noreferrer">https://support.apple.com/zh-cn/guide/apple-business-manager/axm402206497/web</a></p></li></ol><h2 id="系统架构" tabindex="-1">系统架构 <a class="header-anchor" href="#系统架构" aria-label="Permalink to &quot;系统架构&quot;">​</a></h2><p>后端: spring boot + redis + mysql + nginx + centos7</p><p>前端: vue + element ui + axios</p><p>小程序: uniapp</p><h2 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h2><ol><li><p>域名一个并解析到服务器</p></li><li><p>国内备案服务器一个 配置最低要求2h4g</p></li><li><p>域名ssl证书 推荐申请个有效期一年的 ssl证书到期不更换会导致无法控制设备</p></li><li><p>mysql5.7数据库 并创建数据库 mdmadmin 导入sql文件夹下最新版本mdmadmin.sql</p></li><li><p>redis3.2.12</p></li><li><p>服务器要求centos7需要安装Python2 和 openssl 以及openjdk java1.8 mysql和redis可以部署不同服务器</p></li><li><p>nginx反向代理到34567端口 nginx配置参考 nginx文件</p></li><li><p>进入root添加mdm用户</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>useradd mdm</span></span></code></pre></div><p>修改/etc/sudoers文件 追加用户权限</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mdm ALL=(ALL) ALL</span></span></code></pre></div><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240901182717375.png" alt="image-20240901182717375"></p><p>设置mdm用户密码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>passwd mdm</span></span></code></pre></div><p>修改sshd文件 修改默认端口(自定义)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vim /etc/ssh/sshd_config</span></span></code></pre></div><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240901183007184.png" alt="image-20240901183007184"></p><p>重启ssh</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>systemctl restart sshd</span></span></code></pre></div><p>使用新端口和mdm用户登录服务器 后面的操作全部使用mdm用户操作</p></li><li><p>安装字体</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo yum install epel-release -y </span></span>
<span class="line"><span>sudo yum install fontconfig -y </span></span>
<span class="line"><span>sudo fc-cache --force</span></span></code></pre></div></li><li><p>安装nginx redis java1.8</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> sudo yum install -y nginx redis java-1.8.0-openjdk-src.x86_64</span></span>
<span class="line"><span> sudo systemctl start redis</span></span>
<span class="line"><span> sudo systemctl enable redis</span></span>
<span class="line"><span> sudo systemctl start nginx </span></span>
<span class="line"><span> sudo systemctl enable nginx</span></span></code></pre></div></li><li><p>安装mysql</p><p>查询是否有mysql冲突依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>rpm -qa|grep mariadb</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo rpm -e  --nodeps 列出的包名</span></span></code></pre></div><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823134736923.png" alt="image-20240823134736923"></p><p>上传部署包内的mysql文件夹和sql文件夹到/home/mdm 目录</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240901184121425.png" alt="image-20240901184121425"></p><p>安装环境并启动与设置自启动</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd /home/mdm/mysql</span></span>
<span class="line"><span>sudo yum -y install net-tools perl libaio numactl</span></span>
<span class="line"><span>sudo rpm -ivh mysql-community-common-5.7.44-1.el7.x86_64.rpm </span></span>
<span class="line"><span>sudo rpm -ivh mysql-community-libs-5.7.44-1.el7.x86_64.rpm</span></span>
<span class="line"><span>sudo rpm -ivh mysql-community-client-5.7.44-1.el7.x86_64.rpm</span></span>
<span class="line"><span>sudo rpm -ivh mysql-community-server-5.7.44-1.el7.x86_64.rpm</span></span>
<span class="line"><span>sudo systemctl start mysqld</span></span>
<span class="line"><span>sudo systemctl enable mysqld.service</span></span>
<span class="line"><span>cd /home/mdm</span></span></code></pre></div><p>查看临时密码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo grep &#39;temporary password&#39; /var/log/mysqld.log</span></span></code></pre></div><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240901183719540.png" alt="image-20240901183719540"></p><p>进入mysql 输入密码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo mysql -u root -p</span></span></code></pre></div><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823141333981.png" alt="image-20240823141333981"></p><p>修改mysql密码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;你得mysql密码&#39;;</span></span></code></pre></div><p>更新权限并退出重启</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>use mysql;</span></span>
<span class="line"><span>update user set host=&quot;%&quot; where user=&quot;root&quot;;</span></span>
<span class="line"><span>quit;</span></span>
<span class="line"><span>sudo systemctl restart mysqld</span></span></code></pre></div></li><li><p>配置nginx</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo mkdir /etc/nginx/cert</span></span></code></pre></div><p>创建一个你的域名.conf文件 内容参考如下 域名改为你自己的域名 ssl证书位置也要对应修改</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>server {</span></span>
<span class="line"><span>    listen         80;</span></span>
<span class="line"><span>    server_name    mdm.ppgjx.com; # 域名</span></span>
<span class="line"><span>    client_max_body_size 1024M;</span></span>
<span class="line"><span>    add_header Strict-Transport-Security max-age=15768000;</span></span>
<span class="line"><span>    return 301 https://$server_name$request_uri;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>server {</span></span>
<span class="line"><span>    listen 443 ssl; # 老版本是ssl on;较新的为listen 443 ssl;</span></span>
<span class="line"><span>    server_name mdm.ppgjx.com; # 域名</span></span>
<span class="line"><span>    keepalive_timeout 10m;</span></span>
<span class="line"><span>    client_max_body_size 1024M;</span></span>
<span class="line"><span>    ssl_certificate      /etc/nginx/cert/mdm.ppgjx.com.pem; # 申请的证书，把证书和秘钥上传到nginx.conf的同级目录cert的目录下</span></span>
<span class="line"><span>    ssl_certificate_key  /etc/nginx/cert/mdm.ppgjx.com.key; # 秘钥</span></span>
<span class="line"><span>    ssl_session_timeout 24h;</span></span>
<span class="line"><span>    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span>
<span class="line"><span>    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span></span>
<span class="line"><span>    ssl_prefer_server_ciphers on;</span></span>
<span class="line"><span>    location /_AMapService/ {</span></span>
<span class="line"><span>            set $args &quot;$args&amp;jscode=db3c4ab14c402d6c9ce1e7d66d3c09f6&quot;; #高德地图的jscode</span></span>
<span class="line"><span>            proxy_pass https://restapi.amap.com/;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    location / {</span></span>
<span class="line"><span>            proxy_pass https://127.0.0.1:34567; </span></span>
<span class="line"><span>            proxy_redirect off;</span></span>
<span class="line"><span>            root /home/mdm/data/web; # 替换为你实际的web根目录路径</span></span>
<span class="line"><span>            proxy_set_header Host $host;</span></span>
<span class="line"><span>            proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>            proxy_set_header X-Forwarded-Proto $scheme;</span></span>
<span class="line"><span>            proxy_set_header X-Forwarded-Port $server_port;</span></span>
<span class="line"><span>            add_header Content-Security-Policy upgrade-insecure-requests;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>配置文件传入/etc/nginx/conf.d下(需要使用root)</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823145227396.png" alt="image-20240823145227396"></p><p>/etc/nginx创建cert文件夹 将申请好的ssl证书改名传入 和上面创建的nginx配置文件ssl证书位置需要对应 （需要使用root）</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823144933954.png" alt="image-20240823144933954"></p><p>重启nginx</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl restart nginx</span></span></code></pre></div></li><li><p>配置redis redis配置文件在 /etc/redis.conf</p><p>找到requirepass foobared 解除注释 修改为你得redis密码</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823151553387.png" alt="image-20240823151553387"></p><p>重启redis</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>systemctl restart redis</span></span></code></pre></div></li><li><p>修改application-dev.yml 文件 主要修改里面的mysql 和redis信息 其他酌情修改</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823151850569.png" alt="image-20240823151850569"></p></li><li><p>配置签名证书</p><p>使用刚才的ssl证书,把私钥文件改名为 cert.key 证书文件改为 cert.pem 传入 部署包下面的 data/cert下</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823152445220.png" alt="image-20240823152445220"></p><p><strong>需要注意的是 pem文件里面 需要包含 ca证书 中级证书 和最终的颁发的证书 组成一个证书链 否则无法成功签名</strong></p><p><strong>ca证书 中级证书 和最终的颁发的证书有先后顺序分别是 最上层 最终的颁发的证书 中层 中级证书 最低层 ca证书</strong></p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823152640839.png" alt="image-20240823152640839"></p></li><li><p>修改openssl.cnf文件</p><p>openssl.cnf位置在部署包 下的 data/static 下 具体信息可根据自己的公司信息修改 最终会体现在 用户安装的描述文件中 不修改也可以使用</p></li><li><p>上传https.pac文件 到oss上</p><p>https.pac文件在部署包的 data/static 下 上传后拿到下载链接保留待会使用</p></li><li><p>上传截图文件到 服务器/home/mdm目录</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823153929789.png" alt="image-20240823153929789"></p></li><li><p>给予 xjar文件 执行权限</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>chmod -R 700 /home/mdm/xjar</span></span></code></pre></div></li><li><p>创建数据库并导入最新版本sql文件 这里也可以通过工具导入</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823154919835.png" alt="image-20240823154919835"></p></li><li><p>创建systemctl服务器文件/usr/lib/systemd/system/mdm.service</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823185555223.png" alt="image-20240823185555223"></p><p>文件写入此内容</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[Unit]</span></span>
<span class="line"><span>After=syslog.target network.target remote-fs.target nss-lookup.target</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>WorkingDirectory=/home/mdm</span></span>
<span class="line"><span>User=mdm</span></span>
<span class="line"><span>Group=mdm</span></span>
<span class="line"><span>Type=simple</span></span>
<span class="line"><span>ExecStart=/home/mdm/xjar /usr/bin/java -jar /home/mdm/mdmadmin-0.0.1-SNAPSHOT.xjar --spring.config.location=/home/mdm/application-dev.yml</span></span>
<span class="line"><span>PrivateTmp=true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Install]</span></span>
<span class="line"><span>WantedBy=multi-user.target</span></span></code></pre></div><p>刷新服务器</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl daemon-reload</span></span></code></pre></div><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823185738711.png" alt="image-20240823185738711"></p><p>启动mdm服务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl start mdm</span></span></code></pre></div><p>查看mdm状态 绿色表示启动成功</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl status mdm</span></span></code></pre></div><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823185946434.png" alt="image-20240823185946434"></p><p>启动成功后需要等待启动完毕可以查看启动日志</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo journalctl -u mdm -f</span></span></code></pre></div><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823190101174.png" alt="image-20240823190101174"></p><p>找到当前版本 表示部署成功 部署完毕后 进入域名</p><p>默认</p><p>账号:super</p><p>密码:123456</p><p>设置mdm自启动 设置自启动后如果服务器意外宕机也会自动恢复服务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl enable mdm</span></span></code></pre></div></li></ol><h2 id="维护与更新" tabindex="-1">维护与更新 <a class="header-anchor" href="#维护与更新" aria-label="Permalink to &quot;维护与更新&quot;">​</a></h2><ol><li><p>启动命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl start mdm</span></span></code></pre></div><p>查看是否启动成功</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl status mdm</span></span></code></pre></div><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823185946434.png" alt="image-20240823185946434"></p><p>启动成功后需要等待启动完毕可以查看启动日志 一定要查看日志才能确定是否启动成功</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo journalctl -u mdm -f</span></span></code></pre></div><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823190101174.png" alt="image-20240823190101174"></p></li><li><p>关闭服务命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl stop mdm</span></span></code></pre></div></li><li><p>更新</p><p>建议在服务器上创建一个版本 记录当前版本</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823164327808.png" alt="image-20240823164327808"></p><p>每次给的更新部署包都会有一个版本更新文件比如我当前是1.0.1 版本需要更新到 1.0.3版本 就需要先执行1.0.2的更新 再去进行1.0.3的更新</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823164442650.png" alt="image-20240823164442650"></p><p><strong>更新步骤</strong></p><p>关闭服务 建议等待10秒</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl stop mdm</span></span></code></pre></div><p>查看更新日志 修改数据库等需要更改的东西 然后将 xjar文件和mdmadmin-0.0.1-SNAPSHOT.xjar备份 将新版本的xjar和mdmadmin-0.0.1-SNAPSHOT.xjar传入服务器执行启动命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl start mdm</span></span></code></pre></div><p>查看是否启动成功</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl status mdm</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo journalctl -u mdm -f</span></span></code></pre></div></li></ol><h2 id="第一次部署配置" tabindex="-1">第一次部署配置 <a class="header-anchor" href="#第一次部署配置" aria-label="Permalink to &quot;第一次部署配置&quot;">​</a></h2><ol><li><p>修改系统设置</p><p>使用默认管理员账号登录后台进入 管理设置-&gt;系统设置 以下是功能列表说明</p><ul><li><p>api注册接口秘钥</p><p>用于自动化注册接口 必须修改</p></li><li><p>设备访问限制修改后自动关闭时间/ 秒 为0则不使用</p><p>特定场景：假设某个客户需要临时开启某个手机权限,但是时间一久可能忘了关闭会导致设备有解绑的风险,如果设置不为0,则到时间以后会自动关闭权限</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823170240575.png" alt="image-20240823170240575"></p></li><li><p>设备状态检测时间 /秒</p><p>为了感知用户设备是否在线,服务器每隔段时间都会下发命令到手机测试手机是否会在线,此功能是下发时间,建议默认</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823170227406.png" alt="image-20240823170227406"></p></li><li><p>异步任务超过这个时间没有报到 则重试推送 /秒</p><p>下发命令如果没有设备没有按指定时间内执行 则重新下发 建议默认</p></li><li><p>非等待命令过期时间 /秒</p><p>默认即可</p></li><li><p>设备等待超时时间/秒</p><p>非异步命令可以感知命令是否执行成功,如果等待时间内设备没有执行命令则取消这个命令 建议默认</p></li><li><p>禁止退出远程管理 1是 0否</p><p>开启后设备无法通过 设置-&gt;通用-&gt;VPN与设备管理-&gt;移动设备管理-&gt;退出远程管理 来抹掉设备 建议默认</p><p>开启此功能可能会导致用户设备无法使用银行APP,如果判断是正常用户可以给予开启</p></li><li><p>域名</p><p>必须修改为你当前域名</p></li><li><p>httpsPac代理文件url</p><p>这里需要修改为之前上传oss的https.pac文件链接 <strong>请务必保证pac文件可以访问 否则用户设备可能会出现无法上网</strong></p></li><li><p>登录验证码 1开启 0关闭</p><p>登录验证码 根据自己需求开启</p><h3 id="注册邮箱配置" tabindex="-1">注册邮箱配置 <a class="header-anchor" href="#注册邮箱配置" aria-label="Permalink to &quot;注册邮箱配置&quot;">​</a></h3><p>如果不配置 则注册无法使用 邮箱申请专用密码可参考</p><p><a href="https://www.ujcms.com/documentation/351.html" target="_blank" rel="noreferrer">https://www.ujcms.com/documentation/351.html</a></p></li><li><p>mailConnectionTimeout</p><p>默认即可</p></li><li><p>mailFrom</p><p>发邮件的邮箱</p></li><li><p>mailHost</p><p>邮件服务器列如 qq邮箱为 smtp.qq.com</p></li><li><p>mailPass</p><p>专用密码</p></li><li><p>mailPort</p><p>邮箱服务器端口</p></li><li><p>mailSocketFactoryClass</p><p>默认</p></li><li><p>mailSocketFactoryFallback</p><p>默认</p></li><li><p>mailSocketFactoryPort</p><p>邮箱服务器端口</p></li><li><p>mailSslEnable</p><p>默认</p></li><li><p>mailStarttlsEnable</p><p>默认</p></li><li><p>mailTimeout</p><p>默认</p></li><li><p>mailUser</p><p>发邮件的邮箱</p></li><li><p>任务失败重试时间 /秒</p><p>设备命令并不是一定会被手机执行成功的,列如手机正在更新,此参数在命令执行失败后会重新尝试下发命令</p></li></ul><p><strong>修改后需要进行保存才能生效 一定需要检查输入前后有没有空格</strong></p></li></ol><h2 id="服务器维护" tabindex="-1">服务器维护 <a class="header-anchor" href="#服务器维护" aria-label="Permalink to &quot;服务器维护&quot;">​</a></h2><ul><li>服务器防火墙或者安全组只保留80 443端口 ssh端口设置ip白名单</li><li>ssl证书到期需要提前更新 否则会无法控制设备</li><li>如果服务器厂商支持 建议服务器每天打个快照保留其他 保证数据安全 因为数据库不是用的云数据库打快照很有必要</li></ul><h2 id="接口文档" tabindex="-1">接口文档 <a class="header-anchor" href="#接口文档" aria-label="Permalink to &quot;接口文档&quot;">​</a></h2><p>采用的是swgger</p><p><a href="https://xn--6qqv7i2xdt95b/doc.html" target="_blank" rel="noreferrer">https://你的域名/doc.html</a></p><p>接口文档账号密码在application-dev.yml文件里 建议修改</p><h2 id="前端编译" tabindex="-1">前端编译 <a class="header-anchor" href="#前端编译" aria-label="Permalink to &quot;前端编译&quot;">​</a></h2><p>前端采用的是vue-element</p><p>源代码再部署包里的mdm_vue.zip</p><p>node版本v16.20.2 需要安装vuecli</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install -g yarn</span></span>
<span class="line"><span>yarn add @vue/cli-service --dev</span></span></code></pre></div><p>使用idea 找到package.json 箭头执行即可</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823174935193.png" alt="image-20240823174935193"></p><p>执行完毕后 在dist文件夹下生成编译后的文件 传入 /home/mdm/data/web/ 覆盖即可</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823175027639.png" alt="image-20240823175027639"></p><h2 id="服务器架构" tabindex="-1">服务器架构 <a class="header-anchor" href="#服务器架构" aria-label="Permalink to &quot;服务器架构&quot;">​</a></h2><p>后端采用 spring boot + mybatis + mysql + redis</p><p>前端 vue + element ui</p><h2 id="高德地图申请" tabindex="-1">高德地图申请 <a class="header-anchor" href="#高德地图申请" aria-label="Permalink to &quot;高德地图申请&quot;">​</a></h2><p>由于设备定位需要用到地图功能 需要申请高德地图</p><ol><li><p>进入高德地图官网 <a href="https://lbs.amap.com/" target="_blank" rel="noreferrer">https://lbs.amap.com/</a> 注册一个账户并登录</p></li><li><p>进入后台 创建应用</p><p><a href="https://console.amap.com/dev/key/app" target="_blank" rel="noreferrer">https://console.amap.com/dev/key/app</a></p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823175446320.png" alt="image-20240823175446320"></p><ol start="3"><li><p>创建应用完毕后添加key</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823175423322.png" alt="image-20240823175423322"></p></li><li><p>添加key选择web端</p></li></ol><p>添加完毕以后会拿到key和安全秘钥</p><ol start="5"><li><p>安全秘钥需要传入nginx</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20240826105515.png" alt="搜狗截图20240826105515"></p></li><li><p>key需要修改前端 编译后更新服务器即可</p><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240823175931344.png" alt="image-20240823175931344"></p></li></ol></li></ol><h2 id="安全组" tabindex="-1">安全组 <a class="header-anchor" href="#安全组" aria-label="Permalink to &quot;安全组&quot;">​</a></h2><p>安全组只保留80与443端口 ssh端口需要设置ip白名单 切勿对外开放ssh端口</p><h3 id="无安全组" tabindex="-1">无安全组 <a class="header-anchor" href="#无安全组" aria-label="Permalink to &quot;无安全组&quot;">​</a></h3><p>没有安全组的云服务器需要采用内置防火墙</p><p>检测是否安装防火墙</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl status  firewalld</span></span></code></pre></div><p><img src="https://oss.ppgjx.com:9100/xjm/markdown/image-20240904105922016.png" alt="image-20240904105922016"></p><p>如果没有安装则进行安装 启动 设置 自启动</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo yum install -y firewalld epel-release </span></span>
<span class="line"><span>sudo systemctl start firewalld</span></span>
<span class="line"><span>sudo systemctl enable firewalld</span></span></code></pre></div><p>添加80和443端口 移除22端口</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo firewall-cmd --zone=public --add-port=80/tcp --permanent</span></span>
<span class="line"><span>sudo firewall-cmd --zone=public --add-port=443/tcp --permanent</span></span>
<span class="line"><span>sudo firewall-cmd --remove-port=22/tcp --permanent</span></span>
<span class="line"><span>sudo firewall-cmd --reload</span></span></code></pre></div><p>添加你的ip到防火墙 （里面ip需要修改 22端口也要修改成你得ssh端口）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo firewall-cmd --add-rich-rule=&#39;rule family=&quot;ipv4&quot; source address=&quot;114.98.70.62&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; accept&#39; --permanent</span></span>
<span class="line"><span>sudo firewall-cmd --reload</span></span></code></pre></div><h2 id="数据安全" tabindex="-1">数据安全 <a class="header-anchor" href="#数据安全" aria-label="Permalink to &quot;数据安全&quot;">​</a></h2><p>可以每天打一个服务器快照保留7天</p>`,49)]))}const h=a(t,[["render",i]]);export{g as __pageData,h as default};
